[package]
name = "wcn_test_cluster"
version = "0.1.0"
edition = "2024"

[dependencies]
wcn_logging = { git = "https://github.com/WalletConnectFoundation/wcn.git", rev = "f4ae9c5" }
wcn_node = { git = "https://github.com/WalletConnectFoundation/wcn.git", rev = "f4ae9c5" }
wcn_cluster = { git = "https://github.com/WalletConnectFoundation/wcn.git", rev = "f4ae9c5", features = [
    "testing",
] }
wcn_db = { git = "https://github.com/WalletConnectFoundation/wcn.git", rev = "f4ae9c5" }
wcn_rpc = { git = "https://github.com/WalletConnectFoundation/wcn.git", rev = "f4ae9c5", features = [
    "client",
    "server",
] }
wcn_client = { git = "https://github.com/WalletConnectFoundation/wcn.git", rev = "f4ae9c5" }
wc = { git = "https://github.com/WalletConnect/utils-rs.git", tag = "v0.14.1", default-features = false, features = [
    "alloc",
] }

metrics-exporter-prometheus = { version = "0.17", default-features = false }
tap = { version = "1.0", default-features = false }
futures = { version = "0.3", default-features = false }
derive_more = { version = "2.0", default-features = false, features = ["std"] }
alloy = { version = "1.0", default-features = false, features = [
    "provider-anvil-node",
    "node-bindings",
] }
libp2p-identity = { version = "0.2", default-features = false, features = [
    "rand",
    "peerid",
    "ed25519",
] }
tokio = { version = "1.0", default-features = false }
tracing = { version = "0.1", default-features = false }
const-hex = { version = "1.14", default-features = false, features = ["alloc"] }
anyhow = { version = "1.0", default-features = false, features = ["std"] }
serde = { version = "1.0", default-features = false }
base64 = { version = "0.22", default-features = false, features = ["std"] }
serde-env = "0.2"

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
style = { level = "warn", priority = -1 }
absolute_paths = "warn"
bool_to_int_with_if = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
empty_structs_with_brackets = "warn"
explicit_into_iter_loop = "warn"
filter_map_next = "warn"
implicit_clone = "warn"
implied_bounds_in_impls = "warn"
inconsistent_struct_constructor = "warn"
inefficient_to_string = "warn"
into_iter_without_iter = "warn"
iter_not_returning_iterator = "warn"
iter_with_drain = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_string_new = "warn"
match_bool = "warn"
mem_forget = "warn"
mismatching_type_param_order = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
readonly_write_lock = "warn"
redundant_clone = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
struct_excessive_bools = "warn"
trait_duplication_in_bounds = "warn"
type_repetition_in_bounds = "warn"
unnecessary_box_returns = "warn"
unnecessary_self_imports = "warn"
unused_peekable = "warn"
useless_let_if_seq = "warn"
